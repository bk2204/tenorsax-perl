#!/usr/bin/perl

package TenorSAX::App::TextProc;

use v5.14;
use strict;
use warnings;

use open qw/:encoding(UTF-8) :std/;
use warnings qw/FATAL utf8/;
use utf8;

use FindBin;
use lib "$FindBin::RealBin/lib";

use Moose;
use experimental qw/smartmatch/;

extends "TenorSAX::App";

has '+options' => (
	default => sub {
		['device|T=s', 'format|r=s', 'output|o=s',],;
	},
);

exit run(@ARGV) unless caller;

sub run {
	my @args = @_;
	my $app  = __PACKAGE__->new;
	$app->parse_options(\@args);
	my $parser = $app->handle_input_format;
	my $data   = $app->load_data(@args);
	$parser->parse_string($data);
	return 0;
}

sub handle_input_format {
	my $self = shift;
	my $parser;
	for ($self->input_device) {
		when ("pod") {
			require Pod::SAX;
			my $chain = $self->generate_output_chain(["xml-Pod::SAX"]);
			$parser = Pod::SAX->new(Handler => $chain);
		}
		default {
			die "I don't understand that input format.\n"
				if $self->input_device;
			die "I need an input format.\n";
		}
	}
	return $parser;
}

sub load_data {
	my ($self, @args) = @_;
	return $self->load_files(@args);
}
