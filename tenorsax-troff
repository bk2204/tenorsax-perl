#!/usr/bin/perl

use v5.14;
use strict;
use warnings;

use open qw/:encoding(UTF-8) :std/;
use warnings qw/FATAL utf8/;
use utf8;

use FindBin;
use lib "$FindBin::RealBin/lib";

use File::Path::Expand;
use Getopt::Long;
use TenorSAX;
use TenorSAX::Source::Troff;
use TenorSAX::App;

my $options = {
	device => 'xml',
	macro => [],
	macrodir => [],
	output => undef,
};
my $p = Getopt::Long::Parser->new();
$p->configure('no_ignore_case', 'bundling');
$p->getoptions($options,
	'device|T=s',
	'macro|m=s@',
	'macrodir|M=s@',
	'output|o=s',
);

my $logger = sub {};
if ($ENV{TENORSAX_DEBUG}) {
	$logger = sub { say STDERR @_ };
}

my $app = TenorSAX::App->new(InputDevice => "troff",
	OutputDevice => $options->{device});
my $chain = $app->generate_output_chain($options->{output}, [qw/le xml/]);
my $parser = TenorSAX::Source::Troff->new(Handler => $chain,
	Resolution => $app->resolution, Logger => $logger);

my @init_files = map { File::Path::Expand::expand_filename($_) }
	@{$TenorSAX::Config->{troff}->{init_tmac}};

my $data = "";
foreach my $macrodir (@{$options->{macrodir}}) {
	$data .= ".do tenorsax macrodir \"$macrodir\"\n";
}
foreach my $file (@init_files) {
	local $/;
	open(my $fh, '<', $file) or next;
	$data .= ".do tenorsax filename \"$file\"\n";
	$data .= <$fh>;
	close($fh);
}
foreach my $macro (@{$options->{macro}}) {
	$data .= ".do mso \"$macro\"\n";
}
if (@ARGV) {
	foreach my $file (@ARGV) {
		local $/;
		open(my $fh, '<', $file) or die "Can't open file '$file': $!";
		$data .= ".do tenorsax filename \"$file\"\n";
		$data .= <$fh>;
		close($fh) or die "Can't close file '$file': $!";
	}
}
else {
	local $/;
	$data .= <STDIN>;
}

$parser->parse_string($data);
